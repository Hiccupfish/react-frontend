{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmahlo\\\\react-frontend\\\\src\\\\components\\\\Patients\\\\Patients.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Patients.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Patients = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  useEffect(() => {\n    fetch('/api/patient').then(response => response.json()).then(data => setPatients(data)).catch(error => console.error('Error fetching patients:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"patients-list\",\n      children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"patient-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 30\n          }, this), \" \", patient.fullName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"DOB:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 30\n          }, this), \" \", new Date(patient.dateOfBirth).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Gender:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 30\n          }, this), \" \", patient.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)]\n      }, patient.patientID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Patients, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n_c = Patients;\nexport default Patients;\nvar _c;\n$RefreshReg$(_c, \"Patients\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Patients","_s","patients","setPatients","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","patient","fullName","Date","dateOfBirth","toLocaleDateString","gender","patientID","_c","$RefreshReg$"],"sources":["C:/Users/tmahlo/react-frontend/src/components/Patients/Patients.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport './Patients.css';\n\nconst Patients = () => {\n    const [patients, setPatients] = useState([]);\n\n    useEffect(() => {\n        fetch('/api/patient')\n            .then(response => response.json())\n            .then(data => setPatients(data))\n            .catch(error => console.error('Error fetching patients:', error));\n    }, []);\n\n    return (\n        <div className=\"content-box\">\n            <h2>Patients</h2>\n            <ul className=\"patients-list\">\n                {patients.map(patient => (\n                    <li key={patient.patientID} className=\"patient-item\">\n                        <div><strong>Name:</strong> {patient.fullName}</div>\n                        <div><strong>DOB:</strong> {new Date(patient.dateOfBirth).toLocaleDateString()}</div>\n                        <div><strong>Gender:</strong> {patient.gender}</div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Patients;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZO,KAAK,CAAC,cAAc,CAAC,CAChBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAKa,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBd,OAAA;MAAAc,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBlB,OAAA;MAAIa,SAAS,EAAC,eAAe;MAAAC,QAAA,EACxBX,QAAQ,CAACgB,GAAG,CAACC,OAAO,iBACjBpB,OAAA;QAA4Ba,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAChDd,OAAA;UAAAc,QAAA,gBAAKd,OAAA;YAAAc,QAAA,EAAQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACE,OAAO,CAACC,QAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpDlB,OAAA;UAAAc,QAAA,gBAAKd,OAAA;YAAAc,QAAA,EAAQ;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC,IAAII,IAAI,CAACF,OAAO,CAACG,WAAW,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrFlB,OAAA;UAAAc,QAAA,gBAAKd,OAAA;YAAAc,QAAA,EAAQ;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACE,OAAO,CAACK,MAAM;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAH/CE,OAAO,CAACM,SAAS;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAItB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAChB,EAAA,CAxBID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}