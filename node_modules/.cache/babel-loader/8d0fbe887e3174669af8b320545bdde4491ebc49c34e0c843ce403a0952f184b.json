{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nexport const useHealthStats = () => {\n  _s();\n  const [healthStats, setHealthStats] = useState([]);\n  const [filteredStats, setFilteredStats] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [form, setForm] = useState({\n    patientID: '',\n    heartRate: '',\n    bloodPressure: '',\n    temperature: ''\n  });\n  const fetchHealthStats = useCallback(() => {\n    fetch('/api/healthstats').then(response => response.json()).then(data => {\n      setHealthStats(data);\n      setFilteredStats(data);\n    }).catch(error => console.error('Error fetching health stats:', error));\n  }, []);\n  useEffect(() => {\n    fetchHealthStats();\n  }, [fetchHealthStats]);\n  useEffect(() => {\n    setFilteredStats(healthStats.filter(stat => stat.patientID.toString().includes(filter)));\n  }, [filter, healthStats]);\n  const handleDelete = id => {\n    fetch(`/api/healthstats/${id}`, {\n      method: 'DELETE'\n    }).then(() => fetchHealthStats()).catch(error => console.error('Error deleting health stat:', error));\n  };\n  const handleInputChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('/api/healthstats', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...form,\n        date: new Date()\n      })\n    }).then(() => {\n      fetchHealthStats();\n      setForm({\n        patientID: '',\n        heartRate: '',\n        bloodPressure: '',\n        temperature: ''\n      });\n    }).catch(error => console.error('Error creating health stat:', error));\n  };\n  return {\n    filteredStats,\n    filter,\n    form,\n    handleDelete,\n    handleInputChange,\n    handleSubmit,\n    setFilter\n  };\n};\n_s(useHealthStats, \"LeicGKgWvCyY3eKxJWqVqq6OwVU=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useHealthStats","_s","healthStats","setHealthStats","filteredStats","setFilteredStats","filter","setFilter","form","setForm","patientID","heartRate","bloodPressure","temperature","fetchHealthStats","fetch","then","response","json","data","catch","error","console","stat","toString","includes","handleDelete","id","method","handleInputChange","e","target","name","value","handleSubmit","preventDefault","headers","body","JSON","stringify","date","Date"],"sources":["C:/Users/tmahlo/react-frontend/src/components/HealthStats/useHealthStats.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nexport const useHealthStats = () => {\n    const [healthStats, setHealthStats] = useState([]);\n    const [filteredStats, setFilteredStats] = useState([]);\n    const [filter, setFilter] = useState('');\n    const [form, setForm] = useState({ patientID: '', heartRate: '', bloodPressure: '', temperature: '' });\n\n    const fetchHealthStats = useCallback(() => {\n        fetch('/api/healthstats')\n            .then(response => response.json())\n            .then(data => {\n                setHealthStats(data);\n                setFilteredStats(data);\n            })\n            .catch(error => console.error('Error fetching health stats:', error));\n    }, []);\n\n    useEffect(() => {\n        fetchHealthStats();\n    }, [fetchHealthStats]);\n\n    useEffect(() => {\n        setFilteredStats(\n            healthStats.filter(stat =>\n                stat.patientID.toString().includes(filter)\n            )\n        );\n    }, [filter, healthStats]);\n\n    const handleDelete = (id) => {\n        fetch(`/api/healthstats/${id}`, { method: 'DELETE' })\n            .then(() => fetchHealthStats())\n            .catch(error => console.error('Error deleting health stat:', error));\n    };\n\n    const handleInputChange = (e) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetch('/api/healthstats', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ ...form, date: new Date() }),\n        })\n            .then(() => {\n                fetchHealthStats();\n                setForm({ patientID: '', heartRate: '', bloodPressure: '', temperature: '' });\n            })\n            .catch(error => console.error('Error creating health stat:', error));\n    };\n\n    return {\n        filteredStats,\n        filter,\n        form,\n        handleDelete,\n        handleInputChange,\n        handleSubmit,\n        setFilter,\n    };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}